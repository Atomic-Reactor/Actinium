define({ "api": [  {    "type": "Object",    "url": "Actinium.Cache",    "title": "Cache",    "version": "3.0.3",    "name": "Cache",    "group": "Actinium",    "description": "<p>Cache allows you to easily store application data in memory.</p>",    "filename": "src/app/documentation/cache.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Cache.clear()",    "title": "Cache.clear()",    "version": "3.0.3",    "group": "Actinium",    "name": "Cache_clear",    "description": "<p>Delete all cached values.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "key",            "description": "<p>The key to delete. If the value is an <code>{Object}</code> you can use an object path to delete a specific part of the value. The updated value is then returned.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Cache.clear();",        "type": "json"      }    ],    "filename": "src/app/documentation/cache.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Cache.del(key)",    "title": "Cache.del()",    "version": "3.0.3",    "group": "Actinium",    "name": "Cache_del",    "description": "<p>Delete the value for a given key. Returns <code>{Boolean}</code>.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "key",            "description": "<p>The key to delete. If the value is an <code>{Object}</code> you can use an object path to delete a specific part of the value. The updated value is then returned.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "// Given the cached value: { foo: { bar: 123, blah: 'hahaha' } }\nActinium.Cache.del('foo.bar'); // returns: { blah: 'hahaha' }\nActinium.Cache.del('foo');     // returns: true",        "type": "json"      }    ],    "filename": "src/app/documentation/cache.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Cache.get(key)",    "title": "Cache.get()",    "version": "3.0.3",    "group": "Actinium",    "name": "Cache_get",    "description": "<p>Retrieves the value for a given key. If the value is not cached <code>null</code> is returned.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "key",            "description": "<p>The key to retrieve. If the value is an <code>{Object}</code> you can use an object path for the key. If no key is specified the entire cache is returned.</p>"          },          {            "group": "Parameter",            "type": "Mixed",            "optional": true,            "field": "default",            "description": "<p>The default value to return if key is not found.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "// Given the cached value: { foo: { bar: 123 } }\nActinium.Cache.get('foo.bar'); // returns: 123;\nActinium.Cache.get('foo');     // returns: { bar: 123 }",        "type": "json"      }    ],    "filename": "src/app/documentation/cache.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Cache.keys()",    "title": "Cache.keys()",    "version": "3.0.3",    "group": "Actinium",    "name": "Cache_keys",    "description": "<p>Returns an array of the cached keys.</p>",    "filename": "src/app/documentation/cache.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Cache.memsize()",    "title": "Cache.memsize()",    "version": "3.0.3",    "group": "Actinium",    "name": "Cache_memsize",    "description": "<p>Returns the number of entries taking up space in the cache.</p>",    "filename": "src/app/documentation/cache.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Cache.merge(values)",    "title": "Cache.merge()",    "version": "3.0.3",    "group": "Actinium",    "name": "Cache_merge",    "description": "<p>Merges the supplied values object with the current cache. Any existing entries will remain in cache. Duplicates will be overwritten unless <code>option.skipDuplicates</code> is <code>true</code>. Entries that would have exipired since being merged will expire upon merge but their timeoutCallback will not be invoked. Returns the new size of the cache.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "values",            "description": "<p>Key value pairs to merge into the cache.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "// Give the existing cache: { foo: 'bar' }\n\nActinium.Cache.merge({\n    test: {\n        value: 123,\n        expire: 5000,\n    },\n});\n\nActinium.Cache.get()\n// returns: { foo: 'bar', test: 123 }",        "type": "json"      }    ],    "filename": "src/app/documentation/cache.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Cache.set(key,value,timeout,timeoutCallback)",    "title": "Cache.set()",    "version": "3.0.3",    "group": "Actinium",    "name": "Cache_set",    "description": "<p>Sets the value for a given key. If the value is an <code>{Object}</code> and is already cached, you can use an object path to update a specific part of the value. Returns the cached value.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "key",            "description": "<p>The key to set. If the key is an object path and the key does not exist, it will be created.</p>"          },          {            "group": "Parameter",            "type": "Mixed",            "optional": false,            "field": "value",            "description": "<p>The value to cache.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "timeout",            "description": "<p>Remove the value in the specified time in milliseconds. If no timeout value specified, the value will remain indefinitely.</p>"          },          {            "group": "Parameter",            "type": "Function",            "optional": true,            "field": "timeoutCallback",            "description": "<p>Function called when the timeout has expired. The timeoutCallback will be passed the key and value as arguments.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "// The following are equivalent\nActinium.Cache.set('foo', { bar: 123 });\nActinium.Cache.set('foo.bar', 123);\n\n// Set to expire in 5 seconds\nActinium.Cache.set('error', 'Ivnalid username or password', 5000);\n\n// Set to expire in 5 seconds and use a timeoutCallback\nActinium.Cache.set('foo', { bar: 456 }, 5000, (key, value) => console.log(key, value));",        "type": "json"      }    ],    "filename": "src/app/documentation/cache.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Cache.size()",    "title": "Cache.size()",    "version": "3.0.3",    "group": "Actinium",    "name": "Cache_size",    "description": "<p>Returns the current number of entries in the cache.</p>",    "filename": "src/app/documentation/cache.js",    "groupTitle": "Actinium"  },  {    "type": "Object",    "url": "Actinium.Capability",    "title": "Capabilities",    "version": "3.1.2",    "name": "Capabilities",    "group": "Actinium",    "description": "<p>Actinium uses a concept of Roles, Levels, and Capabilities, designed to give the developer the ability to control what users can and cannot do within the application.</p> <p>A capability is permission to perform one or more types of task. Each user might have some capabilities but not others, depending on their role.</p> <p>Actinium comes with the default capabilities:</p> <table> <thead> <tr> <th>Capability</th> <th>Roles</th> </tr> </thead> <tbody> <tr> <td>user.admin</td> <td>super-admin, administrator, moderator, contributor</td> </tr> <tr> <td>user.ban</td> <td>super-admin, administrator, moderator</td> </tr> <tr> <td>user.view</td> <td>super-admin, administrator, moderator</td> </tr> <tr> <td>user.create</td> <td>super-admin, administrator</td> </tr> <tr> <td>user.edit</td> <td>super-admin, administrator</td> </tr> <tr> <td>user.delete</td> <td>super-admin, administrator</td> </tr> <tr> <td>plugin.view</td> <td>super-admin, administrator</td> </tr> <tr> <td>plugin.activate</td> <td>super-admin, administrator</td> </tr> <tr> <td>plugin.deactivate</td> <td>super-admin, administrator</td> </tr> <tr> <td>plugin.uninstall</td> <td>super-admin, administrator</td> </tr> </tbody> </table> <h3>user.admin</h3> <p>Ability to view the /admin pages.</p> <h3>user.ban</h3> <p>Ability to ban a user.</p> <h3>user.view</h3> <p>Ability to view the user list and other user profiles.</p> <h3>user.create</h3> <p>Ability to create a new user.</p> <h3>user.edit</h3> <p>Ability to edit a user.</p> <h3>user.delete</h3> <p>Ability to delete a user.</p> <h3>plugin.view</h3> <p>Ability to view the plugin list.</p> <h3>plugin.activate</h3> <p>Ability to activate a plugin.</p> <h3>plugin.deactivate</h3> <p>Ability to deactivate a plugin.</p> <h3>plugin.uninstall</h3> <p>Ability to uninstall a plugin.</p>",    "filename": "src/app/documentation/capability.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Capability.Role.can(role,capability)",    "title": "Capability.Role.can()",    "version": "3.1.2",    "group": "Actinium",    "name": "Capability_Role_can",    "description": "<p>Determines if the role has the specified capability. Returns <code>{Boolean}</code>.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>The role name.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "capability",            "description": "<p>The capability.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Capability.Role.can('banned', 'user.edit');\n// Retuns false",        "type": "json"      }    ],    "filename": "src/app/documentation/capability.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Capability.Role.get(role)",    "title": "Capability.Role.get()",    "version": "3.1.2",    "group": "Actinium",    "name": "Capability_Role_get",    "description": "<p>Get the capabilities of the specified role. Returns an <code>{Array}</code>.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>The role name.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Capability.Role.get('super-admin');\n// Retuns array of capabilities\n[\n   'user.view',\n   'user.create',\n   'user.edit',\n   'user.delete',\n   'user.ban',\n   'plugin.view',\n   'plugin.activate',\n   'plugin.deactivate'\n]",        "type": "json"      }    ],    "filename": "src/app/documentation/capability.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Capability.User.can(capability,user)",    "title": "Capability.User.can()",    "version": "3.1.2",    "group": "Actinium",    "name": "Capability_User_can",    "description": "<p>Determines if a user has the specified capability. If the user is a Super Admin this will always return true. If the user is an Administrator this will almost always return true except in cases where the Administrator has been expressly excluded from the capability. Returns <code>{Boolean}</code>.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "capability",            "description": "<p>The capability name.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": "<p>The user id or username. Alternatively you can pass a request object. If the request object has the master key specified, role and capabilities are bipassed and <code>true</code> is returned.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Capability.User.can('user.edit', 'SuperAdmin');\n// Returns true",        "type": "json"      }    ],    "filename": "src/app/documentation/capability.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Capability.User.get(user)",    "title": "Capability.User.get()",    "version": "3.1.2",    "group": "Actinium",    "name": "Capability_User_get",    "description": "<p>Get the capabilities of the specified user. Returns an <code>{Array}</code>.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": "<p>The user id or username.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Capability.User.get('yg8yIUql');\nActinium.Capability.User.get('username');",        "type": "json"      }    ],    "filename": "src/app/documentation/capability.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Capability.get(capability)",    "title": "Capability.get()",    "version": "3.1.2",    "group": "Actinium",    "name": "Capability_get",    "description": "<p>Retrieves the specified capability. If no capability is specified a list of all capability names will be returned.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "capability",            "description": "<p>The capability to retrieve.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Capability.get('user.edit');\nActinium.Capability.get();",        "type": "json"      }    ],    "filename": "src/app/documentation/capability.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Capability.register(group,roles,order)",    "title": "Capability.register()",    "version": "3.1.2",    "group": "Actinium",    "name": "Capability_register",    "description": "<p>Registers a new capability.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "group",            "defaultValue": "global",            "description": "<p>The capability group. Specifying a group namespaces your capability so that it doesn't collide with other plugins. For instance you may have a <code>view</code> capability. Adding this to the global group would potentially cause conflicts but adding it to <em>your-plugin-group</em> can avoid this.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "roles",            "description": "<p>Allowed or excluded roles of the capability.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "order",            "defaultValue": "100",            "description": "<p>The order index to register your capability. Useful when trying to overwrite an existing capability.</p>"          }        ],        "Roles": [          {            "group": "Roles",            "type": "Array",            "optional": true,            "field": "allowed",            "description": "<p>Array of role names that are allowed the capability.</p>"          },          {            "group": "Roles",            "type": "Array",            "optional": true,            "field": "excluded",            "description": "<p>Array or role names that are expressly not allowed the capability.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "// Give only super-admin the ability to ban a user:\n\nActinium.Capability.register(\n  'user.ban',\n  {\n    allowed: ['super-admin'],\n    excluded: ['administrator'],\n  },\n  1000,\n);",        "type": "json"      }    ],    "filename": "src/app/documentation/capability.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Capability.unregister(capability)",    "title": "Capability.unregister()",    "version": "3.1.2",    "group": "Actinium",    "name": "Capability_unregister",    "description": "<p>Unregisters a capability.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "capability",            "description": "<p>The capability to unregister.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Capability.unregister('sample.edit');",        "type": "json"      }    ],    "filename": "src/app/documentation/capability.js",    "groupTitle": "Actinium"  },  {    "type": "Object",    "url": "Actinium.Collection",    "title": "Collection",    "version": "3.1.2",    "name": "Collection",    "group": "Actinium",    "description": "<p>Actinium uses a concept of Parse Collections and gives the developer control over what roles have the ability to create, update, retrieve, delete and add fields to each collection using Actinium Roles and Capabilities.</p> <p>For each Parse Collection in your application, you can register capabilities that your roles will use on your collection.</p> <p>The <code>super-admin</code> and <code>administrator</code> roles will have always access to your collection, and cannot be removed using the Actinium API (although they can be remove using the Parse Node API or using the Parse Dashboard).</p> <p>Actinium comes with these default capabilities for each Collection you create (COLLECTION below is replaced by your collection name):</p> <table> <thead> <tr> <th>Capability</th> <th>Roles</th> </tr> </thead> <tbody> <tr> <td>COLLECTION.create</td> <td>super-admin, administrator</td> </tr> <tr> <td>COLLECTION.retrieve</td> <td>super-admin, administrator</td> </tr> <tr> <td>COLLECTION.update</td> <td>super-admin, administrator</td> </tr> <tr> <td>COLLECTION.delete</td> <td>super-admin, administrator</td> </tr> <tr> <td>COLLECTION.addField</td> <td>super-admin, administrator</td> </tr> </tbody> </table> <h3>COLLECTION.create</h3> <p>Ability to create a new object in your collection.</p> <h3>COLLECTION.retrieve</h3> <p>Ability to fetch, find, count objects in your collection.</p> <h3>COLLECTION.update</h3> <p>Ability to update an existing object in your collection.</p> <h3>COLLECTION.delete</h3> <p>Ability to delete an object from your collection.</p> <h3>COLLECTION.addField</h3> <p>Ability to add a new field to your collection.</p>",    "filename": "src/app/documentation/collection.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Collection.register(collection,publicPermissions)",    "title": "Collection.register()",    "version": "3.1.2",    "group": "Actinium",    "name": "Collection_register",    "description": "<p>Registers public class level permission for your collection.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "collection",            "description": "<p>The collection name you wish to set class level permission for.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "publicPermissions",            "description": "<p>Object with boolean properties create, retrieve, update, delete, and addField. True indicates the public has permission to perform this operation. False indicates that only users with roles that match this capability should be permitted to perform this operation. By default all operations are private if this registration is called, but the Parse collection default is fully public otherwise (and only per-object ACLs will apply).</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "// Register Capability for contributor role to create, update, delete, and add fields to collection\nActinium.Capabilities.register('MyCollection.create', {\n        allowed: ['contributor'],\n    },\n    1000,\n);\nActinium.Capabilities.register('MyCollection.update', {\n        allowed: ['contributor'],\n    },\n    1000,\n);\nActinium.Capabilities.register('MyCollection.delete', {\n        allowed: ['contributor'],\n    },\n    1000,\n);\nActinium.Capabilities.register('MyCollection.addField', {\n        allowed: ['contributor'],\n    },\n    1000,\n);\n\n// Allow public read, but private everything else:\nActinium.Collection.register(\n  'MyCollection', {\n      create: false,\n      retrieve: true,\n      update: false,\n      delete: false,\n      addField: false,\n  }\n);",        "type": "json"      }    ],    "filename": "src/app/documentation/collection.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Collection.unregister(collection)",    "title": "Collection.unregister()",    "version": "3.1.2",    "group": "Actinium",    "name": "Collection_unregister",    "description": "<p>Set collection permissions to Actinium default (i.e. fully private or only administrator, super-admin, and master key use).</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "collection",            "description": "<p>The collection to unregister public permissions.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Collection.unregister('MyCollection');",        "type": "json"      }    ],    "filename": "src/app/documentation/collection.js",    "groupTitle": "Actinium"  },  {    "type": "Object",    "url": "Actinium.Hook",    "title": "Hook",    "version": "3.0.5",    "group": "Actinium",    "name": "Hook",    "description": "<p>Hooks are a way for one piece of code to interact/modify another piece of code. They make up the foundation for how plugins interact with Actinium.</p> <h2>Using Hooks</h2> <p>Simply create a callback function that returns a <code>{Promise}</code> and register it with Actinium.</p> <pre><code class=\"language-js\">Actinium.Hook.register('start', myFunction); </code></pre> <p><em>See: <a href=\"#api-Actinium-Hook_register\">Hook.register</a> for full example.</em></p> <h2>Custom Hooks</h2> <p>You can create custom hooks in your plugins so that other developers can extend and modify it. Just create a function and implement the hook using:</p> <pre><code class=\"language-js\">Hook.run('myHook', param1, param2) </code></pre> <p><em>See: <a href=\"#api-Actinium-Hook_run\">Hook.run</a> for full example.</em></p> <h2>Behavior</h2> <p>Hooks are synchronous and will execute in the order they are registered unless the <code>order</code> parameter is specified.</p>",    "parameter": {      "fields": {        "Hooks": [          {            "group": "Hooks",            "optional": false,            "field": "init",            "description": "<p>Triggered after Actinium has initialized Express, Middleware, and Plugins. <code>init</code> is the very first hook triggered. If you have any pre-configuration that needs to take place, this is an optimal time to do it.</p>"          },          {            "group": "Hooks",            "optional": false,            "field": "install",            "description": "<p>Triggered after a plugin has been installed. The <code>Plugin</code> object is passed to the hook.</p>"          },          {            "group": "Hooks",            "optional": false,            "field": "uninstall",            "description": "<p>Triggered after a plugin has been uninstalled. The <code>Plugin</code> object is passed to the hook.</p>"          },          {            "group": "Hooks",            "optional": false,            "field": "start",            "description": "<p>Triggered when the server starts up. If you have any database seeding or schema to construct, this is the optimal time to do it.</p>"          },          {            "group": "Hooks",            "optional": false,            "field": "warning",            "description": "<p>Triggered when the startup warnings are logged.</p>"          },          {            "group": "Hooks",            "optional": false,            "field": "activate",            "description": "<p>Triggered when a plugin has been activated. The <code>Plugin</code> object is passed to the hook.</p>"          },          {            "group": "Hooks",            "optional": false,            "field": "deactivate",            "description": "<p>Triggered when a plugin has been deactivated. The <code>Plugin</code> object is passed to the hook.</p>"          },          {            "group": "Hooks",            "optional": false,            "field": "setting-set",            "description": "<p>Triggered when a new setting has been registered. The setting key and value are passed to the hook.</p>"          },          {            "group": "Hooks",            "optional": false,            "field": "setting-unset",            "description": "<p>Triggered when a setting has been deleted. The setting key and value are passed to the hook.</p>"          },          {            "group": "Hooks",            "optional": false,            "field": "setting-change",            "description": "<p>Triggered when the value of a setting has been changed. The setting key and value are passed to the hook.</p>"          },          {            "group": "Hooks",            "optional": false,            "field": "settings",            "description": "<p>Triggered when the settings have been fetched from the server. The settings object is passed to the hook.</p>"          },          {            "group": "Hooks",            "optional": false,            "field": "capability-registered",            "description": "<p>Run when a new capability is created. The</p>"          },          {            "group": "Hooks",            "optional": false,            "field": "roles",            "description": "<p>Triggered when roles are fetched from the server. The roles object is passed to the hook.</p>"          },          {            "group": "Hooks",            "optional": false,            "field": "role-find",            "description": "<p>Run when a role is fetched from the server. The fetched <code>Parse.Role</code> object is passed to the hook.</p>"          },          {            "group": "Hooks",            "optional": false,            "field": "role-created",            "description": "<p>Run when a role is created. The new role and updated role list is passed to the hook.</p>"          },          {            "group": "Hooks",            "optional": false,            "field": "role-removed",            "description": "<p>Run when a role is removed. The removed role and updated role ist is passed to the hook.</p>"          },          {            "group": "Hooks",            "optional": false,            "field": "user-fetch",            "description": "<p>Triggered when a user is fetched from the server. The fetched <code>Parse.User</code> object is passed to the hook.</p>"          },          {            "group": "Hooks",            "optional": false,            "field": "login",            "description": "<p>Triggered when a user has logged in. The user object will be saved after changes have been made. The <code>Parse.User</code> object is passed to the hook.</p>"          },          {            "group": "Hooks",            "optional": false,            "field": "blueprint-defaults",            "description": "<p>Triggered when the list of default Blueprints is generated. Introduces a way to add to the default Blueprints. The Blueprint array is passed to the hook.</p>"          },          {            "group": "Hooks",            "optional": false,            "field": "route-defaults",            "description": "<p>Triggered when the list of default Routes is generated. Introduces a way to add to the default Routes. The Route Array is passed to the hook.</p>"          },          {            "group": "Hooks",            "optional": false,            "field": "reset-request-context",            "description": "<p>Triggered when the context object is created for a password reset request. Use this hook to add additional context data to a reset request email.</p>"          },          {            "group": "Hooks",            "optional": false,            "field": "reset-request-email-html",            "description": "<p>Triggered when the password reset request email is generating the HTML version of the message. Use this hook to replace or edit the output of the html email message.</p>"          },          {            "group": "Hooks",            "optional": false,            "field": "reset-request-email-text",            "description": "<p>Triggered when the password reset request email is generating the text version of the message. Use this hook to replace or edit the output of the text email message.</p>"          }        ]      }    },    "filename": "src/app/documentation/hooks.js",    "groupTitle": "Actinium"  },  {    "type": "Object",    "url": "Actinium.Hook.flush()",    "title": "Hook.flush()",    "version": "3.0.5",    "group": "Actinium",    "name": "Hook_flush",    "description": "<p>Unregister all callback functions for the specified hook.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "hook",            "description": "<p>The name of the hook to flush.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Hook.flush('custom-hook');",        "type": "json"      }    ],    "filename": "src/app/documentation/hooks.js",    "groupTitle": "Actinium"  },  {    "type": "Array",    "url": "Actinium.Hook.list()",    "title": "Hook.list()",    "version": "3.0.5",    "group": "Actinium",    "name": "Hook_list",    "description": "<p>Get a list of all the registered hooks.</p>",    "examples": [      {        "title": "Example Usage:",        "content": "console.log(Actinium.Hook.list());",        "type": "json"      }    ],    "filename": "src/app/documentation/hooks.js",    "groupTitle": "Actinium"  },  {    "type": "Object",    "url": "Actinium.Hook.register(name,callback,order)",    "title": "Hook.register()",    "version": "3.0.5",    "group": "Actinium",    "name": "Hook_register",    "description": "<p>Registering a hook queues your callback function to be executed when the hook is run.</p> <p>The callback function is passed any parameters from <code>Hook.run()</code> as well as a <code>context</code> object that can be modified between hook callbacks. The context object will be the very last parameter.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The hook you wish to register your callback function to.</p>"          },          {            "group": "Parameter",            "type": "Function",            "optional": false,            "field": "callback",            "description": "<p>Function to execute when the hook is run. This function must return a <code>{Promise}</code>.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "order",            "defaultValue": "100",            "description": "<p>The index order in which to execute your callback function. The lower the number, the sooner it executes.</p>"          }        ],        "Returns": [          {            "group": "Returns",            "type": "String",            "optional": false,            "field": "hookID",            "description": "<p>Returns the UUID of the registered hook. The hookID can be used when unregistering a hook with <a href=\"#api-Actinium-Hook_unregister\">Hook.unregister()</a>;</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "const hookID = Actinium.Hook.register('activate', (plugin, context) => {\n    const { ID } = plugin;\n\n    // Exit if the activated plugin has nothing to do with my plugin\n    if (ID !== 'TEST-PLUGIN') { return Promise.resolve(); }\n\n    // Pass this along to the subsequent callbacks\n    context[ID] = 'Yo.. we activated the TEST-PLUGIN bro!';\n\n    // Resolve the promise after 5 seconds and log the activity\n    return new Promise(resolve => setTimeout(() => {\n        console.log(ID, 'activated');\n        resolve();\n    }, 5000));\n});\n\n// Returns 8c12574f-1dbc-496f-8125-371937acc716",        "type": "json"      }    ],    "filename": "src/app/documentation/hooks.js",    "groupTitle": "Actinium"  },  {    "type": "Object",    "url": "Actinium.Hook.run(name,[,params])",    "title": "Hook.run()",    "version": "3.0.5",    "group": "Actinium",    "name": "Hook_run",    "description": "<p>Hook.Run is useful when implementing custom hooks in your plugins.</p> <p>Upon completion of the hook action sequence the <code>context</code> object is returned.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Unique name of the hook you wish to run.</p>"          },          {            "group": "Parameter",            "type": "Arguments",            "optional": false,            "field": "params",            "description": "<p>Any number of arguments you wish to pass on to the hook callback functions.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": " // 1. Register a hook\nActinium.Hook.register('custom-hook', (stream, context) => {\n    context['prevStream'] = { ...stream };\n    stream['foo'] = 123;\n    return Promise.resolve();\n});\n\n// 2. Create a function that implements Hook.run()\nconst myFunction = async () => {\n    const stream = { foo: 'bar' };\n\n    // Implement `custom-hook`\n    return await Hook.run('custom-hook', stream).then(context => {\n        return { context, stream };\n    });\n};\n\n// 3. Results of myFunction() -> {Promise}\n{\n    context: {\n        hook: 'custom-hook',\n        prevStream: {\n            foo: 'bar',\n        },\n    },\n    stream: {\n        foo: 123\n    },\n}",        "type": "json"      }    ],    "filename": "src/app/documentation/hooks.js",    "groupTitle": "Actinium"  },  {    "type": "Object",    "url": "Actinium.Hook.unregister(hookID)",    "title": "Hook.unregister()",    "version": "3.0.5",    "group": "Actinium",    "name": "Hook_unregister",    "description": "<p>Unregister a hook callback removing it from the Hook's action sequence.</p>",    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Hook.unregister('8c12574f-1dbc-496f-8125-371937acc716');",        "type": "json"      }    ],    "filename": "src/app/documentation/hooks.js",    "groupTitle": "Actinium"  },  {    "type": "Object",    "url": "Actinium.Middleware",    "title": "Middleware",    "version": "3.1.0",    "name": "Middleware",    "group": "Actinium",    "description": "<p>Create or replace Express middleware.</p>",    "filename": "src/app/documentation/middleware.js",    "groupTitle": "Actinium"  },  {    "type": "Object",    "url": "Actinium.Middleware.register(id,callback,order)",    "title": "Middleware.register()",    "version": "3.1.0",    "group": "Actinium",    "name": "Middleware_register",    "description": "<p>Register middleware to be executed when the app initializes.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The uniq identifier for the middleware.</p>"          },          {            "group": "Parameter",            "type": "Function",            "optional": false,            "field": "callback",            "description": "<p>The middleware function. Must return a <code>{Promise}</code>.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "order",            "defaultValue": "100",            "description": "<p>The sort index for the middleware. Used to prioritize certain middleware above others.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "// Middleware to create a custom router handler for `/sample`\n\nconst express = require('express');\n\nActinium.Middleware.register(\n    'sample',\n    app => {\n        const router = express.Router();\n        router.get('/sample', (req, res) => {\n            res.send('hello bruh!');\n        });\n\n        app.use(router);\n\n        return Promise.resolve();\n    },\n    100000,\n);",        "type": "json"      }    ],    "filename": "src/app/documentation/middleware.js",    "groupTitle": "Actinium"  },  {    "type": "Object",    "url": "Actinium.Middleware.replace(id,callback)",    "title": "Middleware.replace()",    "version": "3.1.0",    "group": "Actinium",    "name": "Middleware_replace",    "description": "<p>Replace exsisting middleware.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The uniq identifier for the middleware.</p>"          },          {            "group": "Parameter",            "type": "Function",            "optional": false,            "field": "callback",            "description": "<p>The middleware function. Must return a <code>{Promise}</code>.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": " // Replace the 'sample' middleware\n\nconst express = require('express');\n\nActinium.Middleware.replace(\n    'sample',\n    app => {\n        const router = express.Router();\n        router.get('/sample', (req, res) => {\n            res.send('hello bro!');\n        });\n\n        app.use(router);\n\n        return Promise.resolve();\n    }\n );",        "type": "json"      }    ],    "filename": "src/app/documentation/middleware.js",    "groupTitle": "Actinium"  },  {    "type": "Object",    "url": "Actinium.Middleware.unregister(id)",    "title": "Middleware.unregister()",    "version": "3.1.0",    "group": "Actinium",    "name": "Middleware_unregister",    "description": "<p>Unegister middleware. Used to disable a middleware from executing.</p>",    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Middleware.unregister('docs');",        "type": "json"      }    ],    "filename": "src/app/documentation/middleware.js",    "groupTitle": "Actinium"  },  {    "type": "Object",    "url": "Actinium.Plugin",    "title": "Plugin",    "version": "3.0.5",    "group": "Actinium",    "name": "Plugin",    "description": "<p>Define plugins that extend Actinium functionality.</p>",    "filename": "src/app/documentation/plugins.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Plugin.activate(ID)",    "title": "Plugin.activate()",    "version": "3.0.5",    "group": "Actinium",    "name": "Plugin_activate",    "description": "<p>Programmatically activate a plugin.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The ID of the plugin.</p>"          }        ],        "Returns": [          {            "group": "Returns",            "type": "Promise",            "optional": false,            "field": "plugin",            "description": "<p>Returns a promise containing the activated plugin <code>{Object}</code>.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "const myFunction = async () => {\n    const plugin = await Actinium.Plugin.activate('TEST-PLUGIN');\n\n    if (plugin) {\n        console.log(plugin.ID, 'activated');\n    }\n};",        "type": "json"      }    ],    "filename": "src/app/documentation/plugins.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Plugin.deactivate(ID)",    "title": "Plugin.deactivate()",    "version": "3.0.5",    "group": "Actinium",    "name": "Plugin_deactivate",    "description": "<p>Programmatically deactivate a plugin.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The ID of the plugin.</p>"          }        ],        "Returns": [          {            "group": "Returns",            "type": "Promise",            "optional": false,            "field": "plugin",            "description": "<p>Returns a promise containing the deactivated plugin <code>{Object}</code>.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "const myFunction = async () => {\n    const plugin = await Actinium.Plugin.deactivate('TEST-PLUGIN');\n\n    if (plugin) {\n        console.log(plugin.ID, 'deactivated');\n    }\n};",        "type": "json"      }    ],    "filename": "src/app/documentation/plugins.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Plugin.get()",    "title": "Plugin.get()",    "version": "3.0.5",    "group": "Actinium",    "name": "Plugin_get",    "description": "<p>Get the list of plugins.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "id",            "description": "<p>Retrieves only the specified plugin.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage: All",        "content": "Actinium.Plugin.get();\n\n// Returns {Array}\n[\n    {\n        ID: 'TEST-PLUGIN',\n        description: 'This is my plugin to test if this shit works',\n        name: 'My Awesome Test Plugin',\n        order: 100,\n        version: {\n            actinium: '>=3.0.5',\n            plugin: '0.0.1',\n        },\n    }\n ]",        "type": "json"      },      {        "title": "Example Usage: Single",        "content": "Actinium.Plugin.get('TEST-PLUGIN');\n\n// Returns {Object}\n{\n    ID: 'TEST-PLUGIN',\n    description: 'This is my plugin to test if this shit works',\n    name: 'My Awesome Test Plugin',\n    order: 100,\n    version: {\n        actinium: '>=3.0.5',\n        plugin: '0.0.1',\n    },\n}",        "type": "json"      }    ],    "filename": "src/app/documentation/plugins.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Plugin.isActive(ID)",    "title": "Plugin.isActive()",    "version": "3.0.5",    "group": "Actinium",    "name": "Plugin_isActive",    "description": "<p>Determine if a plugin is active.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The ID of the plugin.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Plugin.isActive('TEST-PLUGIN');\n\n// Returns {Boolean}",        "type": "json"      }    ],    "filename": "src/app/documentation/plugins.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Plugin.isValid(ID,strict)",    "title": "Plugin.isValid()",    "version": "3.0.5",    "group": "Actinium",    "name": "Plugin_isValid",    "description": "<p>Determine if a plugin is valid.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The ID of the plugin.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "strict",            "defaultValue": "false",            "description": "<p>If <code>true</code> the plugin must also be active.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Plugin.isValid('TEST-PLUGIN', true);\n\n// Returns {Boolean}",        "type": "json"      }    ],    "filename": "src/app/documentation/plugins.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Plugin.register(Plugin,active)",    "title": "Plugin.register()",    "version": "3.0.5",    "group": "Actinium",    "name": "Plugin_register",    "description": "<p>Register a plugin object.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "Plugin",            "description": "<p>The plugin object to register.</p>"          },          {            "group": "Parameter",            "type": "Active",            "optional": true,            "field": "active",            "defaultValue": "false",            "description": "<p>The default active state of plugin.</p>"          }        ],        "Plugin": [          {            "group": "Plugin",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Unique identifier for the plugin. If the ID has already been defined, it will be overwritten with the current plugin object.</p>"          },          {            "group": "Plugin",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>Summary of the plugin used when displaying the plugin list. The description can use markdown formatting.</p>"          },          {            "group": "Plugin",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>Common name for the plugin used when displaying the plugin list.</p>"          },          {            "group": "Plugin",            "type": "Number",            "optional": true,            "field": "order",            "defaultValue": "100",            "description": "<p>The sort order of the plugin used when establishing the initial loading order of the plugins.</p>"          },          {            "group": "Plugin",            "type": "Object",            "optional": false,            "field": "version",            "description": "<p>Version information of the plugin.</p>"          },          {            "group": "Plugin",            "type": "String",            "optional": false,            "field": ".actinium",            "description": "<p>The <a href=\"https://www.npmjs.com/package/semver#ranges\">semver</a> range of Actinium the plugin can work with.</p>"          },          {            "group": "Plugin",            "type": "String",            "optional": false,            "field": ".plugin",            "description": "<p>The version of the plugin.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Plugin.register({\n   ID: 'TEST-PLUGIN',\n   description: 'This is my plugin to test if this shit works',\n   name: 'My Awesome Test Plugin',\n   order: 100,\n   version: {\n       actinium: '>=3.0.5',\n       plugin: '0.0.1',\n   },\n});",        "type": "json"      }    ],    "filename": "src/app/documentation/plugins.js",    "groupTitle": "Actinium"  },  {    "type": "Object",    "url": "Actinium.Pulse",    "title": "Pulse",    "version": "3.0.3",    "name": "Pulse",    "group": "Actinium",    "description": "<p>Pulse allows you to schedule tasks in Actinium using full <a href=\"http://www.nncron.ru/help/EN/working/cron-format.htm\">crontab</a> syntax.</p>",    "filename": "src/app/documentation/pulse.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Pulse.define(id,params,options,callback)",    "title": "Pulse.define()",    "version": "3.0.3",    "group": "Actinium",    "name": "Pulse_define",    "description": "<p>Define and scheudle a Pulse cron job.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the cron job.</p>"          },          {            "group": "Parameter",            "type": "Mixed",            "optional": true,            "field": "params",            "description": "<p>If the value is an <code>{Object}</code>, the value will be passed to the callback function excluding the <code>schedule</code> and <code>order</code> parameters.</p> <p>If the value is a <code>{String}</code>, the value will be used as the crontab schedule value.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "params.schedule",            "defaultValue": "* * * * *",            "description": "<p>The crontab syntax for job scheduling.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "params.order",            "defaultValue": "100",            "description": "<p>The index of the job. Used to prioritize jobs. The lower the value the higher the priority.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "options",            "description": "<p>Optional configuration for job scheduling.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "options.scheduled",            "defaultValue": "true",            "description": "<p>A boolean to set if the created task is schaduled.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "options.timezone",            "description": "<p>The timezone that is used for job scheduling.</p> <p>Example: <code>America/Sao_Paulo</code></p>"          },          {            "group": "Parameter",            "type": "Promise",            "optional": false,            "field": "callback",            "description": "<p>Function to execute when the job is run. The <code>params</code> object will be passed to the callback function. Your callback function should return a promise.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "// 1. Log the current timestamp every minute.\nActinium.Pulse.define('timestamp', () => {\n  console.log(Date.now());\n});\n\n// 2. Log the current timestamp at 5 minutes into the hour.\nActinium.Pulse.define('timestamp', '5 * * * *', () => {\n  console.log(Date.now());\n});\n\n// 3. Say Hello every 5 seconds then wait for 30 seconds before restarting.\nActinium.Pulse.define(\n  'hello',\n  {\n    schedule: '0,5,10,15,20,25,30 * * * * *',\n    name: 'Todd'\n  },\n  ({ name }) => console.log(`Hello ${name}`)\n);\n\n// 4. Create a job but don't start it.\nActinium.Pulse.define('timestamp', '* * * * *', { scheduled: false }, () => {\n  console.log(Date.now());\n});",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "Returns:",          "content": "{\n      id: '{String} id of the job',\n      order: '{Number} The index of the job.'\n      task: {\n          start: '{Function} Starts the scheduled task.',\n          stop: '{Function} Stops the scheduled task. You will be able to restart the task.',\n          destroy: '{Function} Stops and destroys the task. You will not be able to restart the task.'\n      },\n      warn: '{String} Warning message indicating if the task has already been defined.'\n}",          "type": "json"        }      ]    },    "filename": "src/app/documentation/pulse.js",    "groupTitle": "Actinium"  },  {    "type": "Array",    "url": "Actinium.Pulse.definitions",    "title": "Pulse.definitions",    "version": "3.0.3",    "group": "Actinium",    "name": "Pulse_definitions",    "description": "<p>List of defined Pulse cron jobs.</p>",    "filename": "src/app/documentation/pulse.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Pulse.log(id,status,params,user)",    "title": "Pulse.log()",    "version": "3.0.3",    "group": "Actinium",    "name": "Pulse_log",    "description": "<p>Manually log activity related to a job.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the cron job.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>The status you wish to log.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "params",            "description": "<p>Key value pairs of additional data to log.</p>"          },          {            "group": "Parameter",            "type": "User",            "optional": true,            "field": "user",            "description": "<p>Parse.User object who the cron job is acting on the behalf of.</p>"          }        ]      }    },    "filename": "src/app/documentation/pulse.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Pulse.remove(id)",    "title": "Pulse.remove()",    "version": "3.0.3",    "group": "Actinium",    "name": "Pulse_remove",    "description": "<p>Remove a Pulse cron job. If the task is duplicated, all instances are removed.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the cron job.</p>"          }        ]      }    },    "filename": "src/app/documentation/pulse.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Pulse.replace(id,params,options,callback)",    "title": "Pulse.replace()",    "version": "3.0.3",    "group": "Actinium",    "name": "Pulse_replace",    "description": "<p>Place a Pulse cron job. If the task is duplicated, all instances are removed and replaced with the newly defined task. See <a href=\"#api-Actinium-Pulse_define\">Pulse.define()</a> for deatils.</p>",    "filename": "src/app/documentation/pulse.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Pulse.start(id)",    "title": "Pulse.start()",    "version": "3.0.3",    "group": "Actinium",    "name": "Pulse_start",    "description": "<p>Start a Pulse cron job. If the task is duplicated, all instances are started.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the cron job.</p>"          }        ]      }    },    "filename": "src/app/documentation/pulse.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Pulse.stop(id)",    "title": "Pulse.stop()",    "version": "3.0.3",    "group": "Actinium",    "name": "Pulse_stop",    "description": "<p>Stop a Pulse cron job. If the task is duplicated, all instances are stoped.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the cron job.</p>"          }        ]      }    },    "filename": "src/app/documentation/pulse.js",    "groupTitle": "Actinium"  },  {    "type": "Object",    "url": "Actinium.Roles",    "title": "Roles",    "version": "3.1.2",    "name": "Roles",    "group": "Actinium",    "description": "<p>A Role defines a set of permissions a user assigned the role is allowed to have.</p> <p>Actinium has 6 default roles:</p> <table> <thead> <tr> <th style=\"text-align:left\">Role</th> <th style=\"text-align:left\">ID</th> <th style=\"text-align:right\">Level</th> </tr> </thead> <tbody> <tr> <td style=\"text-align:left\">Banned User</td> <td style=\"text-align:left\">banned</td> <td style=\"text-align:right\">-1</td> </tr> <tr> <td style=\"text-align:left\">Standard User</td> <td style=\"text-align:left\">user</td> <td style=\"text-align:right\">1</td> </tr> <tr> <td style=\"text-align:left\">Contributor</td> <td style=\"text-align:left\">contributor</td> <td style=\"text-align:right\">10</td> </tr> <tr> <td style=\"text-align:left\">Moderator</td> <td style=\"text-align:left\">moderator</td> <td style=\"text-align:right\">100</td> </tr> <tr> <td style=\"text-align:left\">Administrator</td> <td style=\"text-align:left\">administrator</td> <td style=\"text-align:right\">1000</td> </tr> <tr> <td style=\"text-align:left\">Super Admin</td> <td style=\"text-align:left\">super-admin</td> <td style=\"text-align:right\">10000</td> </tr> </tbody> </table> <h2>Banned User</h2> <p>By default Banned users have zero capabilities and can no longer log in and manage their account. When using the role, you should also remove other roles to ensure that all role-based constraints are applied to the user.</p> <h2>Standard User</h2> <p>By default Standard Users have limited read capabilities of collections and can manage their own profile information.</p> <h2>Contributor</h2> <p>By default Contributors have read/write capabilities of collection content they have created.</p> <h2>Moderator</h2> <p>By default Moderators have read/write capabilities of collection content they have created and those of other Moderators and Contributors.</p> <h2>Administrator</h2> <p>By default Administrators have all default capabilities and any other defined capability unless they are expressly excluded from the capability. Administrators have control of all other roles except Super Admins.</p> <h2>Super Admin</h2> <p>By default Super Admins have all capabilities and complete control over all other roles.</p>",    "filename": "src/app/documentation/roles.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Roles.User.add(user,role,options)",    "title": "Roles.User.add()",    "version": "3.1.2",    "group": "Actinium",    "name": "Roles_User_add",    "description": "<p>Add a user to a role. Returns a <code>{Promise}</code>.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": "<p>The user id.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>The role id.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "options",            "description": "<p>The Cloud Code options object. Used to determine if the current user can administer the role.</p>"          }        ],        "Options": [          {            "group": "Options",            "type": "String",            "optional": true,            "field": "sessionToken",            "description": "<p>The session token of the current user.</p>"          },          {            "group": "Options",            "type": "Boolean",            "optional": true,            "field": "useMasterKey",            "defaultValue": "true",            "description": "<p>Bypass permissions and use the master key to</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Roles.User.add('kVI6HLSl', 'banned', { sessionToken: 'hQJsmKrGFgvbtyieHr8mvDfAx7X3wewS' });\nActinium.Roles.User.add('yg8yIUql', 'super-admin', { useMasterKey: true });",        "type": "json"      }    ],    "filename": "src/app/documentation/roles.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Roles.User.get(user)",    "title": "Roles.User.get()",    "version": "3.1.2",    "group": "Actinium",    "name": "Roles_User_get",    "description": "<p>Retrieves roles of the specified user.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": "<p>The user id or username.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Roles.User.get('SuperAdmin');",        "type": "json"      },      {        "title": "Returns",        "content": "{\n    \"super-admin\": 10000\n}",        "type": "json"      }    ],    "filename": "src/app/documentation/roles.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Roles.User.is(user,role)",    "title": "Roles.User.is()",    "version": "3.1.2",    "group": "Actinium",    "name": "Roles_User_is",    "description": "<p>Check if a user is a member of a specific role. Returns <code>{Boolean}</code>.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": "<p>The user id or username.</p>"          },          {            "group": "Parameter",            "type": "Mixed",            "optional": false,            "field": "role",            "description": "<p>The role name or level.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Roles.User.is('SuperAdmin', 'super-admin');\nActinium.Roles.User.is('SuperAdmin', 10000);\n// Returns true",        "type": "json"      }    ],    "filename": "src/app/documentation/roles.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Roles.User.remove(user,role,options)",    "title": "Roles.User.remove()",    "version": "3.1.2",    "group": "Actinium",    "name": "Roles_User_remove",    "description": "<p>Remove a user from a role. Returns a <code>{Promise}</code>.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": "<p>The user id.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>The role id.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "options",            "description": "<p>The Cloud Code options object. Used to determine if the current user can administer the role.</p>"          }        ],        "Options": [          {            "group": "Options",            "type": "String",            "optional": true,            "field": "sessionToken",            "description": "<p>The session token of the current user.</p>"          },          {            "group": "Options",            "type": "Boolean",            "optional": true,            "field": "useMasterKey",            "defaultValue": "true",            "description": "<p>Bypass permissions and use the master key to</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Roles.User.remove('kVI6HLSl', 'banned', { sessionToken: 'hQJsmKrGFgvbtyieHr8mvDfAx7X3wewS' });",        "type": "json"      }    ],    "filename": "src/app/documentation/roles.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Roles.capabilities(role)",    "title": "Roles.capabilities()",    "version": "3.1.2",    "group": "Actinium",    "name": "Roles_capabilities",    "description": "<p><em>Alias of <a href=\"#api-Actinium-Capabilities_Role_get\">Actinium.Capabilities.Role.get()</a></em></p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>The role name.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": " Actinium.Roles.capabilities('super-admin');\n // Retuns array of capabilities\n [\n    'user.view',\n    'user.create',\n    'user.edit',\n    'user.delete',\n    'user.ban',\n    'plugin.view',\n    'plugin.activate',\n    'plugin.deactivate'\n]",        "type": "json"      }    ],    "filename": "src/app/documentation/roles.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Roles.create(role,options)",    "title": "Roles.create()",    "version": "3.1.2",    "group": "Actinium",    "name": "Roles_create",    "description": "<p>Create a new <code>Parse.Role</code> object. Returns a <code>{Promise}</code>.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "role",            "description": "<p>The new role to create.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "options",            "description": "<p>The Cloud Code options object. Used to determine if the current user can administer the role.</p>"          }        ],        "Options": [          {            "group": "Options",            "type": "String",            "optional": true,            "field": "sessionToken",            "description": "<p>The session token of the current user.</p>"          },          {            "group": "Options",            "type": "Boolean",            "optional": true,            "field": "useMasterKey",            "defaultValue": "true",            "description": "<p>Bypass permissions and use the master key to</p>"          }        ],        "Role": [          {            "group": "Role",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The unique name of the role. This is how you identify the role in code.</p>"          },          {            "group": "Role",            "type": "String",            "optional": false,            "field": "label",            "description": "<p>The readable label of the role. Used when listing details about the role.</p>"          },          {            "group": "Role",            "type": "Number",            "optional": false,            "field": "level",            "description": "<p>The numeric value of the role. Used when doing broad evaluations.</p>"          },          {            "group": "Role",            "type": "Array",            "optional": false,            "field": "roles",            "description": "<p>Array of role names that this role inherits.</p>"          },          {            "group": "Role",            "type": "Array",            "optional": false,            "field": "acl",            "description": "<p>Array of role names that can administer the new role.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Roles.create(\n    {\n        name: 'subscriber',\n        label: 'Subscriber',\n        level: 5,\n        roles: ['user'],\n        acl: ['administrator', 'super-admin'],\n    },\n    {\n        sessionToken: 'hQJsmKrGFgvbtyieHr8mvDfAx7X3wewS'\n    }\n);",        "type": "json"      }    ],    "filename": "src/app/documentation/roles.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Roles.get(search)",    "title": "Roles.get()",    "version": "3.1.2",    "group": "Actinium",    "name": "Roles_get",    "description": "<p>Retrieves the specified role. If no role search is specified, all roles are returned.</p>",    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Roles.get(1000); // Returns the Administrator role.\nActinium.Roles.get('super-admin'); // Returns the Super Admin role.\nActinium.Roles.get(); // Returns all role objects;",        "type": "json"      },      {        "title": "Returns",        "content": "{\n   \"super-admin\":{\n      \"name\":\"super-admin\",\n      \"label\":\"Super Administrator\",\n      \"level\":10000,\n      \"users\":{\n         \"yg8yIUql\":{\n            \"avatar\":\"https://scontent-ort2-1.xx.fbcdn.net/v/t1.0-9/avatar.jpg\",\n            \"objectId\":\"yg8yIUql\",\n            \"username\":\"SuperAdmin\"\n         }\n      },\n      \"roles\":{\n         \"6CX7sAaV1S\":{\n            \"level\":1,\n            \"name\":\"user\",\n            \"objectId\":\"6CX7sAaV1S\"\n         },\n         \"VHFAoFXSTz\":{\n            \"level\":100,\n            \"name\":\"moderator\",\n            \"objectId\":\"VHFAoFXSTz\"\n         },\n         \"XF7ByHfaEe\":{\n            \"level\":10,\n            \"name\":\"contributor\",\n            \"objectId\":\"XF7ByHfaEe\"\n         },\n         \"kDIUBqCNXW\":{\n            \"level\":1000,\n            \"name\":\"administrator\",\n            \"objectId\":\"kDIUBqCNXW\"\n         }\n      },\n      \"objectId\":\"Lxank79qjd\"\n   },\n   \"administrator\":{\n      \"name\":\"administrator\",\n      \"label\":\"Administrator\",\n      \"level\":1000,\n      \"users\":{},\n      \"roles\":{\n         \"6CX7sAaV1S\":{\n            \"level\":1,\n            \"name\":\"user\",\n            \"objectId\":\"6CX7sAaV1S\"\n         },\n         \"VHFAoFXSTz\":{\n            \"level\":100,\n            \"name\":\"moderator\",\n            \"objectId\":\"VHFAoFXSTz\"\n         },\n         \"XF7ByHfaEe\":{\n            \"level\":10,\n            \"name\":\"contributor\",\n            \"objectId\":\"XF7ByHfaEe\"\n         }\n      },\n      \"objectId\":\"kDIUBqCNXW\"\n   },\n   \"moderator\":{\n      \"name\":\"moderator\",\n      \"level\":100,\n      \"label\":\"Moderator\",\n      \"users\":{},\n      \"roles\":{},\n      \"objectId\":\"VHFAoFXSTz\"\n   },\n   \"contributor\":{\n      \"name\":\"contributor\",\n      \"label\":\"Contributor\",\n      \"level\":10,\n      \"users\":{},\n      \"roles\":{\n         \"6CX7sAaV1S\":{\n            \"level\":1,\n            \"name\":\"user\",\n            \"objectId\":\"6CX7sAaV1S\"\n         }\n      },\n      \"objectId\":\"XF7ByHfaEe\"\n   },\n   \"user\":{\n      \"name\":\"user\",\n      \"label\":\"Standard User\",\n      \"level\":1,\n      \"users\":{},\n      \"roles\":{},\n      \"objectId\":\"6CX7sAaV1S\"\n   },\n   \"banned\":{\n      \"name\":\"banned\",\n      \"level\":-1000,\n      \"label\":\"Banned User\",\n      \"users\":{},\n      \"roles\":{},\n      \"objectId\":\"1wJIKV5NFo\"\n   }\n}",        "type": "json"      }    ],    "filename": "src/app/documentation/roles.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Roles.remove(role,options)",    "title": "Roles.remove()",    "version": "3.1.2",    "group": "Actinium",    "name": "Roles_remove",    "description": "<p>Remove a new <code>Parse.Role</code> object. Returns <code>{Object}</code>.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "role",            "description": "<p>The role name to remove.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "options",            "description": "<p>The Cloud Code options object. Used to determine if the current user can administer the role.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Roles.remove('contributor', { useMasterKey: true });",        "type": "json"      }    ],    "filename": "src/app/documentation/roles.js",    "groupTitle": "Actinium"  },  {    "type": "Object",    "url": "Actinium.Setting",    "title": "Setting",    "version": "3.1.1",    "name": "Setting",    "group": "Actinium",    "description": "<p>Manage application setting key/value pairs. Actinium settings are provided to you can manage your running configuration for your application. By default, each setting is securely stored so that only users that should have access to a setting are permitted to set, get, or delete settings on the site.</p> <p>The following capabilities can be assigned to your roles for settings:</p> <table> <thead> <tr> <th style=\"text-align:left\">Capability</th> <th style=\"text-align:left\">Default Roles</th> <th style=\"text-align:right\">Description</th> </tr> </thead> <tbody> <tr> <td style=\"text-align:left\">Setting.create</td> <td style=\"text-align:left\">administrator,super-admin</td> <td style=\"text-align:right\">Ability to create a new setting.</td> </tr> <tr> <td style=\"text-align:left\">Setting.retrieve</td> <td style=\"text-align:left\">administrator,super-admin</td> <td style=\"text-align:right\">Ability to retrieve any/all settings.</td> </tr> <tr> <td style=\"text-align:left\">Setting.update</td> <td style=\"text-align:left\">administrator,super-admin</td> <td style=\"text-align:right\">Ability to edit any existing setting.</td> </tr> <tr> <td style=\"text-align:left\">Setting.delete</td> <td style=\"text-align:left\">administrator,super-admin</td> <td style=\"text-align:right\">Ability to delete any existing setting.</td> </tr> <tr> <td style=\"text-align:left\">setting.${key}-get</td> <td style=\"text-align:left\">administrator,super-admin</td> <td style=\"text-align:right\">Ability to retrieve the setting with <code>key</code>. e.g. setting.foo-get to allow get of setting <code>foo</code></td> </tr> <tr> <td style=\"text-align:left\">setting.${key}-set</td> <td style=\"text-align:left\">administrator,super-admin</td> <td style=\"text-align:right\">Ability to edit the setting with <code>key</code>. e.g. setting.foo-set to allow edit of setting <code>foo</code></td> </tr> <tr> <td style=\"text-align:left\">setting.${key}-delete</td> <td style=\"text-align:left\">administrator,super-admin</td> <td style=\"text-align:right\">Ability to delete the setting with <code>key</code>. e.g. setting.foo-delete to allow delete of setting <code>foo</code></td> </tr> </tbody> </table>",    "filename": "src/app/documentation/settings.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Setting.get(key,default)",    "title": "Setting.get()",    "version": "3.1.1",    "group": "Actinium",    "name": "Setting_get",    "description": "<p>Get a setting value.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "key",            "description": "<p>The unique setting key. If the value is an object, you can use dot notation to get a specific portion of the setting.</p>"          },          {            "group": "Parameter",            "type": "Mixed",            "optional": false,            "field": "default",            "description": "<p>The default value if the key has not been set.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Setting.get('site.hostname');",        "type": "json"      }    ],    "filename": "src/app/documentation/settings.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Setting.set(key,value)",    "title": "Setting.set()",    "version": "3.1.1",    "group": "Actinium",    "name": "Setting_set",    "description": "<p>Create or update a setting value. Returns a <code>{Promise}</code>.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "key",            "description": "<p>The unique setting key.</p>"          },          {            "group": "Parameter",            "type": "Mixed",            "optional": true,            "field": "value",            "description": "<p>The setting value. If the value is an object, you can use dot notation to set a specific portion of the setting.</p>"          },          {            "group": "Parameter",            "type": "Parse.ACL",            "optional": true,            "field": "ACL",            "description": "<p>The Parse ACL object to apply to the setting.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Setting.set('site', { title: 'My Awesome Site', hostname: 'mysite.com' });",        "type": "json"      }    ],    "filename": "src/app/documentation/settings.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.Setting.unset(key)",    "title": "Setting.unset()",    "version": "3.1.1",    "group": "Actinium",    "name": "Setting_unset",    "description": "<p>Unset a setting value. Returns a <code>{Promise}</code>.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "key",            "description": "<p>The unique setting key.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Setting.unset('site.title');",        "type": "json"      }    ],    "filename": "src/app/documentation/settings.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.User.can(capability,user)",    "title": "User.can()",    "version": "3.1.2",    "group": "Actinium",    "name": "User_can",    "description": "<p>Determines if a user has the specified capability. If the user is a Super Admin this will always return true. If the user is an Administrator this will almost always return true except in cases where the Administrator has been expressly excluded capability. Returns <code>{Boolean}</code>.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "capability",            "description": "<p>The capability name.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": "<p>The user id or username. Alternatively you can pass a request object. If the request object has the master key specified, role and capabilities are bipassed and <code>true</code> is returned.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.User.can('user.edit', 'SuperAdmin');\n// Returns true",        "type": "json"      }    ],    "filename": "src/app/documentation/capability.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.User.capabilities(user)",    "title": "User.capabilities()",    "version": "3.1.2",    "group": "Actinium",    "name": "User_capabilities",    "description": "<p>Get the capabilities of the specified user. Returns an <code>{Array}</code>.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": "<p>The user id or username.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.User.capabilities('yg8yIUql');\nActinium.User.capabilities('username');",        "type": "json"      }    ],    "filename": "src/app/documentation/capability.js",    "groupTitle": "Actinium"  },  {    "type": "Function",    "url": "Actinium.User.isRole(user,role)",    "title": "User.isRole()",    "version": "3.1.2",    "group": "Actinium",    "name": "User_isRole",    "description": "<p>Check if a user is a member of a specific role. Returns <code>{Boolean}</code>.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": "<p>The user id or username.</p>"          },          {            "group": "Parameter",            "type": "Mixed",            "optional": false,            "field": "role",            "description": "<p>The role name or level.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.User.isRole('SuperAdmin', 'super-admin');\nActinium.User.isRole('SuperAdmin', 10000);\n// Returns true",        "type": "json"      }    ],    "filename": "src/app/documentation/roles.js",    "groupTitle": "Actinium"  },  {    "type": "Cloud",    "url": "blueprint-create",    "title": "blueprint-create",    "version": "3.1.2",    "group": "Cloud",    "name": "blueprint_create",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "ID",            "description": "<p>The name of the blueprint.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>The description of the blueprint.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "sections",            "description": "<p>object containing 1 or more sections, each with 1 or more zones.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "meta",            "description": "<p>free-form metadata object</p>"          }        ]      }    },    "description": "<p>Create a new blueprint for use in a front-end application.</p>",    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Cloud.run('blueprint-create', {\n        ID: 'MyBlueprint',\n        description: 'Blueprint with a top, left, right, center, and bottom section.',\n        sections: {\n            top: {\n                zones: ['top'],\n                meta: {},\n            },\n            right: {\n                zones: ['right'],\n                meta: {},\n            },\n            left: {\n                zones: ['left'],\n                meta: {},\n            },\n            center: {\n                zones: ['center'],\n                meta: {},\n            },\n            bottom: {\n                zones: ['bottom'],\n                meta: {},\n            },\n        },\n        meta: {\n            foo: 'bar',\n        },\n    },\n);",        "type": "json"      }    ],    "filename": "src/app/documentation/blueprint.js",    "groupTitle": "Cloud"  },  {    "type": "Cloud",    "url": "blueprint-delete",    "title": "blueprint-delete",    "version": "3.1.2",    "group": "Cloud",    "name": "blueprint_delete",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "objectId",            "description": "<p>the object id of the existing blueprint</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "ID",            "description": "<p>The name of the existing blueprint.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>The description of the blueprint.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "sections",            "description": "<p>object containing 1 or more sections, each with 1 or more zones.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "meta",            "description": "<p>free-form metadata object</p>"          }        ]      }    },    "description": "<p>Delete existing blueprint. Built-in blueprints can not be deleted by default.</p>",    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Cloud.run('blueprint-update', {\n      ID: 'MyBlueprint',\n      description: 'Blueprint with a top, left, right, center, and bottom section.',\n      sections: {\n          top: {\n              zones: ['top'],\n              meta: {},\n          },\n          right: {\n              zones: ['right'],\n              meta: {},\n          },\n          left: {\n              zones: ['left'],\n              meta: {},\n          },\n          center: {\n              zones: ['center'],\n              meta: {},\n          },\n          bottom: {\n              zones: ['bottom'],\n              meta: {},\n          },\n      },\n      meta: {\n          foo: 'bar',\n      },\n  },\n);\n\n/**",        "type": "json"      },      {        "title": "Example Usage:",        "content": "Actinium.Cloud.run('blueprint-delete', {\n    ID: 'MyBlueprint',\n});",        "type": "json"      }    ],    "filename": "src/app/documentation/blueprint.js",    "groupTitle": "Cloud"  },  {    "type": "Cloud",    "url": "blueprint-generate",    "title": "blueprint-generate",    "version": "3.1.2",    "group": "Cloud",    "name": "blueprint_generate",    "description": "<p>Generate the default Blueprint objects.</p>",    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Cloud.run('blueprint-generate');",        "type": "json"      }    ],    "filename": "src/app/documentation/blueprint.js",    "groupTitle": "Cloud"  },  {    "type": "Cloud",    "url": "blueprint-retrieve",    "title": "blueprint-retrieve",    "version": "3.1.2",    "group": "Cloud",    "name": "blueprint_retrieve",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "ID",            "description": "<p>The name of an existing blueprint.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "limit",            "defaultValue": "1000",            "description": "<p>Limit of blueprints to return</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "skip",            "defaultValue": "0",            "description": "<p>Number of blueprints to skip</p>"          }        ]      }    },    "description": "<p>Retrieve list of blueprints.</p>",    "examples": [      {        "title": "Example Usage:",        "content": "// get a specific blueprint\nActinium.Cloud.run('blueprint-retrieve', { ID: 'MyBlueprint'});\n\n// get list of blueprints, limit to 1000\nActinium.Cloud.run('blueprint-retrieve', { limit: 1000 });",        "type": "json"      }    ],    "filename": "src/app/documentation/blueprint.js",    "groupTitle": "Cloud"  },  {    "type": "Cloud",    "url": "capability-check",    "title": "capability-check",    "version": "3.1.2",    "group": "Cloud",    "name": "capability_check",    "description": "<p>Check one or more capabilities for the request user.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Mixed",            "optional": false,            "field": "capability",            "description": "<p>string or array of strings for the group path for a capability.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "strict",            "defaultValue": "true",            "description": "<p>if [true] all capabilities must be permitted for request user, else only one must match</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage",        "content": "Reactium.Cloud.run('capability-check', { capability: 'user.view', strict: false})",        "type": "json"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "permitted",            "description": ""          }        ]      }    },    "filename": "src/app/documentation/capability.js",    "groupTitle": "Cloud"  },  {    "type": "Cloud",    "url": "capability-create",    "title": "capability-create",    "version": "3.1.2",    "group": "Cloud",    "name": "capability_create",    "description": "<p>Alias for capability-edit</p>",    "filename": "src/app/documentation/capability.js",    "groupTitle": "Cloud"  },  {    "type": "Cloud",    "url": "capability-delete",    "title": "capability-delete",    "version": "3.1.2",    "group": "Cloud",    "name": "capability_delete",    "description": "<p>Delete a capability.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "group",            "description": "<p>capability name in object path form <code>group.action</code> (e.g. user.edit)</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage",        "content": "Reactium.Cloud.run('capability-delete', { capability: 'user.view'})",        "type": "json"      }    ],    "filename": "src/app/documentation/capability.js",    "groupTitle": "Cloud"  },  {    "type": "Cloud",    "url": "capability-edit",    "title": "capability-edit",    "version": "3.1.2",    "group": "Cloud",    "name": "capability_edit",    "description": "<p>Create new capability or edit an existing one.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "group",            "description": "<p>capability name in object path form <code>group.action</code> (e.g. user.edit)</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "perms",            "description": "<p><code>allowed</code> roles and <code>excluded</code> roles.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage",        "content": "// only administrators and super-admin users can \"mail.send\"\nReactium.Cloud.run('capability-edit', 'mail.send', {\n    \"allowed\": [\n        \"administrator\",\n        \"super-admin\"\n    ],\n    \"excluded\": [\n        \"banned\"\n    ]\n})",        "type": "json"      }    ],    "filename": "src/app/documentation/capability.js",    "groupTitle": "Cloud"  },  {    "type": "Cloud",    "url": "capability-get",    "title": "capability-get",    "version": "3.1.2",    "group": "Cloud",    "name": "capability_get",    "description": "<p>Get current capabilities.</p>",    "examples": [      {        "title": "Example Usage",        "content": "Reactium.Cloud.run('capability-get')",        "type": "json"      },      {        "title": "Example Response",        "content": "{\n        \"user.admin\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"user.view\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\",\n                \"moderator\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"user.create\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"user.edit\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"user.delete\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"user.ban\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\",\n                \"moderator\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"plugin.view\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"plugin.activate\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"plugin.deactivate\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"plugin.uninstall\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"setting.set\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"setting.get\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"setting.unset\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"Setting.create\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"Setting.update\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"Setting.delete\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"Setting.addField\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"Plugin.create\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"Plugin.update\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"Plugin.delete\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"Plugin.addField\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"Blueprint.create\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"Blueprint.retrieve\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"Blueprint.update\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"Blueprint.delete\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"Blueprint.addField\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"Route.create\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\",\n                \"contributor\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"Route.retrieve\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\",\n                \"contributor\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"Route.update\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\",\n                \"contributor\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"Route.delete\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\",\n                \"contributor\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        },\n        \"Route.addField\": {\n            \"allowed\": [\n                \"administrator\",\n                \"super-admin\"\n            ],\n            \"excluded\": [\n                \"banned\"\n            ]\n        }\n    }",        "type": "json"      }    ],    "filename": "src/app/documentation/capability.js",    "groupTitle": "Cloud"  },  {    "type": "Cloud",    "url": "plugin-activate",    "title": "plugin-activate",    "version": "3.0.5",    "group": "Cloud",    "name": "plugin_activate",    "description": "<p>Activate a plugin</p> <p>The <code>activate</code> hook will be run when a plugin is activated.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "plugin",            "description": "<p>The ID of the plugin to activate.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Cloud.run('plugin-activate', { plugin: 'TEST-PLUGIN' });\n\n// Returns the Plugin object on success",        "type": "json"      }    ],    "filename": "src/app/documentation/plugins.js",    "groupTitle": "Cloud"  },  {    "type": "Cloud",    "url": "plugin-deactivate",    "title": "plugin-deactivate",    "version": "3.0.5",    "group": "Cloud",    "name": "plugin_deactivate",    "description": "<p>Deactivate a plugin.</p> <p>The <code>deactivate</code> hook will be run when a plugin is deactivated.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "plugin",            "description": "<p>The ID of the plugin to deactivate.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Cloud.run('plugin-deactivate', { plugin: 'TEST-PLUGIN' });\n\n// Returns the Plugin object on success",        "type": "json"      }    ],    "filename": "src/app/documentation/plugins.js",    "groupTitle": "Cloud"  },  {    "type": "Cloud",    "url": "plugin-uninstall",    "title": "plugin-uninstall",    "version": "3.0.5",    "group": "Cloud",    "name": "plugin_uninstall",    "description": "<p>Uninstall a plugin.</p> <p>The <code>deactivate</code> and <code>uninstall</code> hooks will be run when a plugin is uninstalled.</p> <p><em>If the server restarts, the plugin will be installed again unless you remove it from the server by either.</em></p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "plugin",            "description": "<p>The ID of the plugin to uninstall.</p>"          }        ]      }    },    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Cloud.run('plugin-deactivate', { plugin: 'TEST-PLUGIN' });\n\n// Returns the Plugin object on success",        "type": "json"      }    ],    "filename": "src/app/documentation/plugins.js",    "groupTitle": "Cloud"  },  {    "type": "Cloud",    "url": "plugins",    "title": "plugins",    "version": "3.0.5",    "group": "Cloud",    "name": "plugins",    "description": "<p>Retrieves the list of plugins.</p>",    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Cloud.run('plugins');",        "type": "json"      }    ],    "filename": "src/app/documentation/plugins.js",    "groupTitle": "Cloud"  },  {    "type": "Cloud",    "url": "routes",    "title": "routes",    "version": "3.1.2",    "group": "Cloud",    "name": "route",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "limit",            "defaultValue": "1000",            "description": "<p>Limit number of routes to return.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "defaultValue": "0",            "description": "<p>The results page to return. If page is less than 1, all routes are returned.</p>"          }        ]      }    },    "description": "<p>Retrieve list of routes. Routes are access controlled by user capabilities.</p>",    "examples": [      {        "title": "Example Usage:",        "content": "// Get first page of routes\nActinium.Cloud.run('routes', { page: 1 });\n\n// Get all routes\nActinium.Cloud.run('routes');",        "type": "json"      }    ],    "filename": "src/app/documentation/route.js",    "groupTitle": "Cloud"  },  {    "type": "Cloud",    "url": "routes",    "title": "routes",    "version": "3.1.2",    "group": "Cloud",    "name": "route",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "limit",            "defaultValue": "1000",            "description": "<p>Limit of routes to return.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "defaultValue": "0",            "description": "<p>The results page to return. If value is less than 1, all routes are returned.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "route",            "description": "<p>The name of an existing route.</p>"          }        ]      }    },    "description": "<p>Retrieve list of routes. Routes are access controlled by user capabilities.</p>",    "examples": [      {        "title": "Example Usage:",        "content": "// Get first page of routes\nActinium.Cloud.run('routes', { page: 1 });\n\n// Get all routes\nActinium.Cloud.run('routes');",        "type": "json"      }    ],    "filename": "src/app/documentation/route.js",    "groupTitle": "Cloud"  },  {    "type": "Cloud",    "url": "route-create",    "title": "route-create",    "version": "3.1.2",    "group": "Cloud",    "name": "route_create",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "route",            "description": "<p>The route string.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "blueprintId",            "description": "<p>The name of the associated blueprint.</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "capabilities",            "defaultValue": "[",            "description": "<p>Array of capabilities (object-path format)</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "meta",            "description": "<p>free-form metadata object</p>"          }        ]      }    },    "description": "<p>Create a new route for use in a front-end application.</p>",    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Cloud.run('route-create', {\n        route: '/hello-world',\n        blueprintId: 'Simple',\n        capabilities: ['admin-ui.view'],\n        meta: {\n            foo: 'bar',\n        },\n    },\n);",        "type": "json"      }    ],    "filename": "src/app/documentation/route.js",    "groupTitle": "Cloud"  },  {    "type": "Cloud",    "url": "route-delete",    "title": "route-delete",    "version": "3.1.2",    "group": "Cloud",    "name": "route_delete",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "objectId",            "description": "<p>the object id of the existing route</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "route",            "description": "<p>The existing route string.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "blueprintId",            "description": "<p>The name of the associated blueprint.</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "capabilities",            "description": "<p>Array of capabilities (object-path format)</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "meta",            "description": "<p>free-form metadata object</p>"          }        ]      }    },    "description": "<p>Delete existing route. Built-in routes can not be deleted by default.</p>",    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Cloud.run('route-update', {\n      route: '/hello-world',\n      blueprintId: 'Simple',\n      capabilities: ['admin-ui.view'],\n      meta: {\n          foo: 'bar',\n      },\n  },\n);\n\n/**",        "type": "json"      },      {        "title": "Example Usage:",        "content": "Actinium.Cloud.run('route-delete', {\n    route: '/hello-world',\n});",        "type": "json"      }    ],    "filename": "src/app/documentation/route.js",    "groupTitle": "Cloud"  },  {    "type": "Cloud",    "url": "route-generate",    "title": "route-generate",    "version": "3.1.2",    "group": "Cloud",    "name": "route_generate",    "description": "<p>Generate the default Route objects.</p>",    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Cloud.run('route-generate');",        "type": "json"      }    ],    "filename": "src/app/documentation/route.js",    "groupTitle": "Cloud"  },  {    "type": "Cloud",    "url": "route-retrieve",    "title": "route-retrieve",    "version": "3.1.2",    "group": "Cloud",    "name": "route_retrieve",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "route",            "description": "<p>The name of an existing route.</p>"          }        ]      }    },    "description": "<p>Retrieve the specified route.</p>",    "examples": [      {        "title": "Example Usage:",        "content": "// Get the /hello-world route\nActinium.Cloud.run('route-retrieve', { route: '/hello-world'});",        "type": "json"      }    ],    "filename": "src/app/documentation/route.js",    "groupTitle": "Cloud"  },  {    "type": "Cloud",    "url": "setting-get",    "title": "setting-get",    "version": "3.1.1",    "group": "Cloud",    "name": "setting_get",    "description": "<p>Retrieves a specifc setting object. Capabilities will be enforced.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "key",            "description": "<p>The unique setting key.</p>"          }        ]      }    },    "permission": [      {        "name": "`Setting.retrieve` or `setting.${key}-get` capabilities."      }    ],    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Cloud.run('setting-get', { key: 'site'});",        "type": "json"      }    ],    "filename": "src/app/documentation/settings.js",    "groupTitle": "Cloud"  },  {    "type": "Cloud",    "url": "setting-set",    "title": "setting-set",    "version": "3.1.1",    "group": "Cloud",    "name": "setting_set",    "description": "<p>Create or update a setting object. Capabilities will be enforced.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "key",            "description": "<p>The unique setting key.</p>"          },          {            "group": "Parameter",            "type": "Mixed",            "optional": false,            "field": "value",            "description": "<p>The setting value.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "public",            "description": "<p>When true, the setting will be made publicly readable, otherwise reads will be restricted.</p>"          }        ]      }    },    "permission": [      {        "name": "`Setting.create`, `Setting.update` or `setting.${key}-set` capabilities."      }    ],    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Cloud.run('setting-set', { key: 'site', value: {title: 'My Site', hostname: 'mysite.com'}, public: true});",        "type": "json"      }    ],    "filename": "src/app/documentation/settings.js",    "groupTitle": "Cloud"  },  {    "type": "Cloud",    "url": "setting-unset",    "title": "setting-unset",    "version": "3.1.1",    "group": "Cloud",    "name": "setting_unset",    "description": "<p>Unsets a setting value. Capabilities will be enforced.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "key",            "description": "<p>The unique setting key.</p>"          }        ]      }    },    "permission": [      {        "name": "`Setting.delete` or `setting.${key}-delete` capabilities."      }    ],    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Cloud.run('setting-unset', { key: 'site' });",        "type": "json"      }    ],    "filename": "src/app/documentation/settings.js",    "groupTitle": "Cloud"  },  {    "type": "Cloud",    "url": "settings",    "title": "settings",    "version": "3.1.1",    "group": "Cloud",    "name": "settings",    "description": "<p>Retrieves the list of settings. Capabilities will be enforced.</p>",    "permission": [      {        "name": "`Setting.retrieve` or individual `setting.${key}-get` permissions."      }    ],    "examples": [      {        "title": "Example Usage:",        "content": "Actinium.Cloud.run('settings');",        "type": "json"      }    ],    "filename": "src/app/documentation/settings.js",    "groupTitle": "Cloud"  }] });
